# Distributed under the Boost Software License, Version 1.0.
# See accompanying file LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt

import os ;
import path ;
import common ;

using clang : : ccache clang++ -fcolor-diagnostics -fdiagnostics-show-category=name -Qunused-arguments -stdlib=libc++ ;
using gcc : : ccache g++ ;

path-constant BUILD_ROOT : . ;
path-constant HOME : [ os.home-directories ] ;
path-constant VERSION_FILE : $(BUILD_ROOT)/version ;
path-constant DESTDIR : $(BUILD_ROOT)/dist/ ;

constant INCLUDES : <include>include&&$(HOME)/include/&&/usr/local/include/&&/usr/include/ ;

if [ os.name ] = NT {
  CAT = type ;
} else {
  CAT = cat ;
}

rule cat ( filename ) {
  return [ SHELL "$(CAT) \"$(filename)\"" ] ;
}

constant VERSION : [ cat $(VERSION_FILE) ] ;

modules.poke HOME : $(HOME) ;
modules.poke BUILD_ROOT : $(BUILD_ROOT) ;
modules.poke VERSION_FILE : $(VERSION_FILE) ;
modules.poke DESTDIR : $(DESTDIR) ;
modules.poke INCLUDES : $(INCLUDES) ;
modules.poke VERSION : $(VERSION) ;

rule tag ( name : type ? : property-set ) {
  if $(type) in STATIC_LIB SHARED_LIB IMPORT_LIB {
    local result = [ common.format-name <base> : $(name) : $(type) : $(property-set) ] ;

    if $(type) = SHARED_LIB && (
       ! ( [ $(property-set).get <target-os> ] in windows cygwin darwin aix ) &&
       ! ( [ $(property-set).get <toolset> ] in pgi ) ) {
      result = $(result).$(VERSION) ;
    }

    return $(result) ;
  }
}
